---
description: "CI-Guard: многоуровневая проверка качества для CLI-агента"
globs:
  - "**/*.rs"
  - "**/*.toml" 
  - "**/*.sql"
  - "**/*.md"
alwaysApply: true
---

## Уровни проверки

### L1: Базовые (обязательно)
- `cargo fmt --all --check` - форматирование
- `cargo clippy --all-targets -- -D warnings` - линтинг
- `cargo check --all` - компиляция
- `cargo test --all --quiet` - unit тесты

### L2: Качество (для критических компонентов)
- `cargo nextest run` - параллельные тесты (если установлен)
- `cargo tarpaulin --out Xml` - покрытие ≥80% для toolsvc/llm/memory
- `sqlx migrate info` - проверка миграций БД
- `taplo fmt --check **/*.toml` - TOML форматирование

### L3: Интеграция (для готовых фич)
- Тест полного цикла: `cli init → todo add → run → verify`
- Проверка memory слоёв: M0→M1→M2→M3→M4
- Валидация DAG планов на циклы
- Проверка tool registry и вызовов

### L4: Производительность (опционально)
- Бенчмарки критических путей
- Профилирование memory usage
- Latency тестирование LLM вызовов

## Автофикс стратегия
1. **Форматирование**: `cargo fmt --all` + `taplo fmt **/*.toml`
2. **Простые clippy**: автоматически исправляй `--fix`
3. **Тесты**: если падают - анализируй и чини, не игнорируй
4. **Покрытие**: добавляй тесты для новых функций

## Блокирующие ошибки
- Compilation errors
- Test failures в критических компонентах (toolsvc, llm, memory)
- Покрытие <60% для новых модулей
- SQL syntax errors в миграциях
- Циклические зависимости в DAG

## Предупреждения (не блокируют)
- TODO/FIXME без issue ссылки
- Покрытие 60-80% (улучшить в следующих итерациях)
- Performance regression <20%
