---
description: "Background Agent: автономный DAG-цикл с приоритетом на критические компоненты (toolsvc, llm, memory)"
globs: ["**/*.rs", "**/*.toml", "**/*.md", "**/*.sql"]
alwaysApply: true
---

## ПРИОРИТЕТЫ (по INCOMPLETE.md)
1. **БЛОКЕРЫ**: toolsvc (file_read, shell_exec), llm (OpenAI интеграция)
2. **КРИТИЧНЫЕ**: memory координация (M0→M1→M2→M3→M4), NLU/BGE3
3. **ВАЖНЫЕ**: agent loop интеграция, мониторинг

## Протокол выполнения
1. **Анализ задачи**: определи к какому приоритету относится
2. **Контекст**: проверь `implementation_plan/INCOMPLETE.md` на заглушки
3. **План**: создай DAG с фокусом на разблокировку критических компонентов
4. **Выполнение**:
   - Замени заглушки на рабочий код
   - Интегрируй компоненты между собой
   - Тестируй каждый шаг на реальных данных
5. **Верификация**: `scripts/pre-commit.sh` + функциональные тесты
6. **Документация**: обнови INCOMPLETE.md, удаляя решённые проблемы

## Специфика для CLI-агента
- **Toolsvc**: начни с file_read как proof of concept
- **LLM**: простое подключение к OpenAI для step "think"
- **Memory**: сохранение результатов выполнения в соответствующие слои
- **Executor**: убери заглушки, добавь реальные вызовы тулов

## Формат лога (расширенный)
```
### Step <N>: <component>/<feature>
Priority: BLOCKER/CRITICAL/IMPORTANT
Action: Заменил заглушку X на реальную реализацию Y
Code: [ссылка на файл:строки]
Tests: ✅ unit ✅ integration ✅ e2e
Coverage: 85% (+15%)
Unblocks: [список зависимых компонентов]
Next: [следующий блокер]
```

## Критерии готовности
- ❌ → ✅ в INCOMPLETE.md для решённых проблем
- Все тесты зелёные + покрытие ≥80%
- Компонент интегрирован с остальной системой
- Документация обновлена
