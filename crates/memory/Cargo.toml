[package]
name = "memory"
version.workspace = true
edition.workspace = true

[features]
default = ["cpu"]

# Minimal build - basic in-memory storage without persistence
minimal = []

# CPU build - full functionality without GPU acceleration
cpu = [
    "ai/cpu",
    "embeddings",
    "reranking"
]

# GPU build - full functionality with GPU acceleration
gpu = [
    "cpu",
    "ai/gpu",
    "gpu-acceleration",
    "cuda"
]

# Individual memory features
hnsw-index = ["hnsw_rs", "rayon", "num_cpus"]
persistence = ["sled"]
backup-restore = ["tar", "flate2"]
vector-search = ["rayon", "num_cpus"]
embeddings = ["ai/embeddings"]
reranking = ["ai/reranking"]
gpu-acceleration = []
cuda = ["ai/cuda"]
notifications = ["reqwest", "colored"]
hot-reload = ["notify"]
# Gate the deprecated legacy orchestrator behind a feature (off by default)
legacy-orchestrator = []
# New feature flags to enable orchestration and services modules
orchestration-modules = []
services-modules = []
# Tests feature to include extended/slow suites
extended-tests = []
legacy-tests = []
# New: keyword text search via Tantivy for hybrid search
keyword-search = []

[dependencies]
anyhow.workspace = true
serde.workspace = true
serde_json.workspace = true
tokio.workspace = true
tracing.workspace = true
log.workspace = true
async-trait.workspace = true
uuid.workspace = true
chrono.workspace = true
thiserror.workspace = true

# AI services
ai = { path = "../ai" }

# Common utilities
common = { path = "../common" }

# Embedding cache and storage (conditional)
sled = { version = "0.34", optional = true }

# Utilities (always available)
futures = "0.3"
parking_lot = "0.12"
bincode = "1.3"
dirs = "5.0"
rand = "0.8"
sha2 = "0.10"
sysinfo = "0.31"
crossbeam-channel = "0.5"
tempfile = "3.0"
once_cell = "1.19"

# Vector search (conditional)
hnsw_rs = { version = "0.3", optional = true }
num_cpus = { version = "1.0", optional = true }
rayon = { version = "1.8", optional = true }

# Notifications (conditional)
reqwest = { version = "0.12", features = ["json"], optional = true }
colored = { version = "2.0", optional = true }

# Backup/restore functionality (conditional)
tar = { version = "0.4", optional = true }
flate2 = { version = "1.0", optional = true }

# Configuration serialization (needed by config_loader)
toml = "0.8"
serde_yaml = "0.9"

# Hot-reload watcher (optional)
notify = { version = "6.1", optional = true }

# Tantivy removed to avoid zstd link conflicts; using in-memory BM25 instead


# Test dependencies
[dev-dependencies]
tracing-subscriber.workspace = true
criterion = { version = "0.5", features = ["async_tokio", "html_reports"] }
llm = { path = "../llm" }
clap = { version = "4.0", features = ["derive"] }
rand_chacha = "0.3"
tempfile = "3.0"
rand = "0.8"
futures = "0.3"

# Additional test dependencies for comprehensive testing
mockall = "0.12"
proptest = "1.4"
tokio-test = "0.4"

[[example]]
name = "memory_demo"
path = "examples/memory_demo.rs"
required-features = ["extended-tests", "legacy-tests"]

[[bench]]
name = "vector_benchmarks"
harness = false

[[example]]
name = "di_best_practices"
path = "examples/di_best_practices.rs"
required-features = ["extended-tests", "legacy-tests"]

[[example]]
name = "comprehensive_performance_validation"
path = "examples/comprehensive_performance_validation.rs"
required-features = ["extended-tests", "hnsw-index", "gpu-acceleration"]

[[example]]
name = "simd_optimized_benchmark"
path = "examples/simd_optimized_benchmark.rs"
required-features = ["extended-tests", "legacy-tests"]

[[example]]
name = "test_gpu_acceleration"
path = "examples/test_gpu_acceleration.rs"
required-features = ["extended-tests", "gpu-acceleration"]
